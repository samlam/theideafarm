{"ts":1361687528478,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361687823362,"patch":[[{"diffs":[[1,"var com = require('../common');\r\n\r\n\r\nvar UserApiProxy = function () {\r\n    if (!(this instanceof UserApiProxy))\r\n        return new UserApiProxy();\r\n\r\n    //constructor for parent\r\n    com.events.EventEmitter.call(this);\r\n\r\n    //maintain access to the postManager obj\r\n    var _self = this;\r\n    var _clog = function (message) {\r\n        com.log('UserApiProxy : %s', message);\r\n    };\r\n    var _sortByPostUpdateAsc = function (a, b) {\r\n        var aVal = a.UpdateDate;\r\n        var bVal = b.UpdateDate;\r\n        return ((aVal < bVal) ? -1 : ((aVal > bVal) ? 1 : 0));\r\n    }\r\n    var _sortByPostUpdateDesc = function (a, b) {\r\n        var aVal = a.UpdateDate;\r\n        var bVal = b.UpdateDate;\r\n        return ((bVal < aVal) ? -1 : ((bVal > aVal) ? 1 : 0));\r\n    }\r\n\r\n    postdb.on('error', function () {\r\n        var msg = 'connection to postdb failed';\r\n        _clog(msg)\r\n        console.error.bind(console, msg);\r\n    });\r\n    postdb.once('open', function () {\r\n        _clog('connection to postdb successful');\r\n    });\r\n\r\n    this.EVENT_POSTSLISTED = 'POSTSLISTED';\r\n    this.EVENT_POSTSAVED = 'POSTSAVED';\r\n\r\n    UserApiProxy.prototype.listPosts = function (userId, startPosition, batchSize, next) {\r\n        startPosition = (!startPosition) ? 0 : startPosition;\r\n        var userObjId = (typeof userId == typeof '') ? com.ObjectID(userId) : userId;\r\n        /*\r\n        var query = postModel\r\n            .find({ OwnerUserId: userObjId })\r\n            .skip(startPosition)\r\n            .limit((!batchSize || batchSize === 0)? global.POSTLISTSIZELIMIT: batchSize);*/\r\n        var query = postModel.find({\r\n            OwnerUserId: userObjId\r\n        },null\r\n        , {\r\n        sort: { UpdateDate: -1},\r\n        skip: startPosition,\r\n        limit: (!batchSize || batchSize === 0)? global.POSTLISTSIZELIMIT: batchSize\r\n    }) ;\r\n\r\n        query.exec(function (err, docs) {\r\n            if (docs) {\r\n                _self.emit(_self.EVENT_POSTSLISTED, docs);\r\n                docs.sort(_sortByPostUpdateDesc);\r\n            }\r\n            return next(err, docs);\r\n        });\r\n    }\r\n\r\n    /**\r\n    get a post object\r\n\r\n    @param {ObjectID} postId \r\n    @param {Function} callback with error and post object\r\n    **/\r\n    UserApiProxy.prototype.get = function (postId, callback) {\r\n        //var query = postModel.findOne(com.ObjectID(postId));\r\n        postModel.findById(com.ObjectID(postId), function (err, p) {\r\n            return callback(err, p);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    _self.on(_self.EVENT_POSTSLISTED, function (docs) {\r\n        _clog(docs.length + ' record(s) listed');\r\n    });\r\n\r\n    _self.on(_self.EVENT_POSTSAVED, function (post) {\r\n        _clog(post._id.toString() + ' saved');\r\n    });\r\n};\r\n\r\n\r\ncom.util.inherits(UserApiProxy, com.events.EventEmitter);\r\nmodule.exports = UserApiProxy();\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2822}]],"length":2822,"saved":false}
{"ts":1361687961417,"patch":[[{"diffs":[[0,"    "],[-1,"postdb.on('error', function () {\r\n        var msg = 'connection to postdb failed';\r\n        _clog(msg)\r\n        console.error.bind(console, msg"],[1,"this.EVENT_POSTSLISTED = 'POSTSLISTED';\r\n    this.EVENT_POSTSAVED = 'POSTSAVED';\r\n\r\n    UserApiProxy.prototype.authenticateUser = function (userContext ){\r\n        switch(userContext.strategy){\r\n            case 'google':\r\n                \r\n                break;\r\n            case 'local':\r\n                break;\r\n            default:\r\n                throw new Error('Invalid passport strategy'"],[0,");\r\n    "],[1,"  "],[-1,"});"],[1,"  }"],[0,"\r\n    "],[1," "],[-1,"postdb.once('open', function () {\r\n        _clog('connection to postdb successful');\r\n    });\r\n\r\n    this.EVENT_POSTSLISTED = 'POSTSLISTED';\r\n    this.EVENT_POSTSAVED = 'POSTSAVED';"],[1,"   var options = {\r\n            hostname : global.APISERVER,\r\n            port: global.APIPORT,\r\n            method:'POST',\r\n            path:'/user/authenticate'\r\n        }\r\n        com.http.request(options, function(httpRes){\r\n            \r\n        });\r\n    }\r\n"],[0,"\r\n\r\n"]],"start1":768,"start2":768,"length1":349,"length2":688}]],"length":3161,"saved":false}
{"ts":1361688875941,"patch":[[{"diffs":[[0,"rContext"],[1,", callback"],[0," ){\r\n   "]],"start1":915,"start2":915,"length1":16,"length2":26},{"diffs":[[0,"  }\r\n       "],[1," var req ="],[0," com.http.re"]],"start1":1369,"start2":1369,"length1":24,"length2":34},{"diffs":[[0,"){\r\n            "],[1,"httpRes.setEncoding('utf8');\r\n            httpRes.on('data', function(chunk){\r\n                ret = chunk;\r\n            });\r\n        });\r\n        \r\n        req.on('error', function(e){\r\n            console.log('UserApiProxy message : ' + e.message);\r\n        });\r\n        "],[0,"\r\n        });\r\n "]],"start1":1434,"start2":1434,"length1":32,"length2":305},{"diffs":[[0,"      \r\n        "],[-1,"});"],[0,"\r\n    }\r\n\r\n\r\n   "]],"start1":1717,"start2":1717,"length1":35,"length2":32}]],"length":3451,"saved":false}
{"ts":1361688919055,"patch":[[{"diffs":[[0,"t = chunk;\r\n"],[1,"                console.log('UserApiProxy authenticateUser : ' + chunk);\r\n"],[0,"            "]],"start1":1547,"start2":1547,"length1":24,"length2":98}]],"length":3525,"saved":false}
{"ts":1361688924550,"patch":[[{"diffs":[[0,"r : ' + "],[-1,"chunk"],[1,"ret"],[0,");\r\n    "]],"start1":1616,"start2":1616,"length1":21,"length2":19}]],"length":3523,"saved":false}
{"ts":1361688938808,"patch":[[{"diffs":[[0,"        "],[1,"var "],[0,"ret = ch"]],"start1":1537,"start2":1537,"length1":16,"length2":20}]],"length":3527,"saved":false}
{"ts":1361689174105,"patch":[[{"diffs":[[0," };\r"],[-1,"\n    var _sortByPostUpdateAsc = function (a, b) {\r\n        var aVal = a.UpdateDate;\r\n        var bVal = b.UpdateDate;\r\n        return ((aVal < bVal) ? -1 : ((aVal > bVal) ? 1 : 0));\r\n    }\r\n    var _sortByPostUpdateDesc = function (a, b) {\r\n        var aVal = a.UpdateDate;\r\n        var bVal = b.UpdateDate;\r\n        return ((bVal < aVal) ? -1 : ((bVal > aVal) ? 1 : 0));\r\n    }\r"],[0,"\n\r\n "]],"start1":382,"start2":382,"length1":387,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"\r\n    UserApiProxy.prototype.listPosts = function (userId, startPosition, batchSize, next) {\r\n        startPosition = (!startPosition) ? 0 : startPosition;\r\n        var userObjId = (typeof userId == typeof '') ? com.ObjectID(userId) : userId;\r\n        /*\r\n        var query = postModel\r\n            .find({ OwnerUserId: userObjId })\r\n            .skip(startPosition)\r\n            .limit((!batchSize || batchSize === 0)? global.POSTLISTSIZELIMIT: batchSize);*/\r\n        var query = postModel.find({\r\n            OwnerUserId: userObjId\r\n        },null\r\n        , {\r\n        sort: { UpdateDate: -1},\r\n        skip: startPosition,\r\n        limit: (!batchSize || batchSize === 0)? global.POSTLISTSIZELIMIT: batchSize\r\n    }) ;\r\n\r\n        query.exec(function (err, docs) {\r\n            if (docs) {\r\n                _self.emit(_self.EVENT_POSTSLISTED, docs);\r\n                docs.sort(_sortByPostUpdateDesc);\r\n            }\r\n            return next(err, docs);\r\n        });\r\n    }"],[0,"\r\n\r\n"]],"start1":1437,"start2":1437,"length1":982,"length2":8}]],"length":2174,"saved":false}
{"ts":1361689331438,"patch":[[{"diffs":[[0,"allback ){\r\n"],[1,"        var body = {};\r\n"],[0,"        swit"]],"start1":547,"start2":547,"length1":24,"length2":48}]],"length":2198,"saved":false}
{"ts":1361689375942,"patch":[[{"diffs":[[0," ' + ret);\r\n"],[1,"                if (callback)\r\n                    callback(ret);\r\n"],[0,"            "]],"start1":1268,"start2":1268,"length1":24,"length2":91}]],"length":2265,"saved":false}
{"ts":1361689401896,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"req.write(body);\r\n        req.end();"],[0,"\r\n    }\r\n\r\n\r"]],"start1":1509,"start2":1509,"length1":24,"length2":60}]],"length":2301,"saved":false}
{"ts":1361689829933,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"    this.EVENT_POSTSLISTED = 'POSTSLISTED';\r\n    this.EVENT_POSTSAVED = 'POSTSAVED';\r\n\r\n"],[0,"    "]],"start1":385,"start2":385,"length1":96,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"\r\n    /**\r\n    get a post object\r\n\r\n    @param {ObjectID} postId \r\n    @param {Function} callback with error and post object\r\n    **/\r\n    UserApiProxy.prototype.get = function (postId, callback) {\r\n        //var query = postModel.findOne(com.ObjectID(postId));\r\n        postModel.findById(com.ObjectID(postId), function (err, p) {\r\n            return callback(err, p);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    _self.on(_self.EVENT_POSTSLISTED, function (docs) {\r\n        _clog(docs.length + ' record(s) listed');\r\n    });\r\n\r\n    _self.on(_self.EVENT_POSTSAVED, function (post) {\r\n        _clog(post._id.toString() + ' saved');\r\n    });\r\n"],[0,"};\r\n"]],"start1":1478,"start2":1478,"length1":636,"length2":8}]],"length":1585,"saved":false}
{"ts":1361689890198,"patch":[[{"diffs":[[0,"                "],[1,"body.accessToken = userContext.accessToken;\r\n                body.username = userContext.username;"],[0,"\r\n              "]],"start1":562,"start2":562,"length1":32,"length2":130}]],"length":1683,"saved":false}
