{"ts":1361521598827,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"curl({\r\n    baseUrl:'scripts'\r\n});\r\nvar apiBasePath = '',\r\n    isMobile = false,\r\n    userId = '';\r\nvar fileBasePath = '',\r\n    isLoading = false,\r\n    popupPostId = '',\r\n    popupTitle = null,\r\n    popupDetails = null,\r\n    rolloverSound = null,\r\n    popupDetailsExpandEvent = 'textareaExpandTriggered',\r\n    reloadMasonryEvent = 'reloadMasonryEvent',\r\n    masonryHelper = null,\r\n    reloadPosts = null,\r\n    popupPanelHelper = null,\r\n    growlHelper = null,\r\n    $container = null,\r\n    quickZoomHelper = null,\r\n    youtubePanelHelper = null,\r\n    isRunningGetNext = 0, //check the scroll event\r\n    isRunningReload = 0; //workaround\r\n\r\n//need to protect masonry\r\ndocument.init = function (options) {\r\n    apiBasePath = options.apiBasePath;\r\n    isMobile = options.isMobile;\r\n    userId = options.userId;\r\n    fileBasePath = apiBasePath + '/file/';\r\n\r\n    $container = $('#column');\r\n    curl(['modules/growl/growl'], function (Growl) {\r\n        growlHelper = new Growl({\r\n            el: $('div#growlHolder')\r\n        });\r\n        document.notify('Welcome', 'to ideafarm');\r\n    });\r\n    curl(['modules/popupPanel/popupPanel']).then(function (PopupPanel) {\r\n        popupPanelHelper = new PopupPanel();\r\n    });\r\n\r\n    $(window).scroll(function () {\r\n        if ($(window).scrollTop() + $(window).height() > $(document).height() - 30) {\r\n            if (isRunningGetNext > 0) return;\r\n            isRunningGetNext = 1;\r\n            document.getPosts(masonryHelper.brickCount, function () {\r\n                document.getQuickZoom();\r\n                isRunningGetNext = setTimeout(function () { \r\n                    clearTimeout(isRunningGetNext); \r\n                    $(document).trigger(reloadMasonryEvent); \r\n                    isRunningGetNext = 0 ; \r\n                },1000);\r\n            }, function () {\r\n                isRunningGetNext = 0;\r\n            });\r\n\r\n        }\r\n    });\r\n\r\n    document.htmlEncode = function (value) {\r\n        if (value) {\r\n            return jQuery('<div />').text(value).html();\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    document.htmlDecode = function (value) {\r\n        if (value) {\r\n            return $('<div />').html(value).text();\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    document.pause = function (milliseconds) {\r\n        var start = new Date().getTime();\r\n        while (true) {\r\n            if ((new Date().getTime() - start) > milliseconds) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    document.getMasonry = function (masonryFunc) {\r\n        curl(['modules/masonry/masonry'])\r\n        .then(function (Masonry) {\r\n            if (!masonryHelper) {\r\n                var width = $(window).width();\r\n                masonryHelper = new Masonry();\r\n                masonryHelper.batchSize = Math.round(width / 240) * 3;\r\n                //eventlistener when reload is needed\r\n                $(document).on(reloadMasonryEvent, function (e) {\r\n                    masonryHelper.reload();\r\n                });\r\n            }\r\n            if (masonryFunc) masonryFunc(masonryHelper);\r\n        })\r\n    }\r\n\r\n    document.getYoutubePanel = function (youtubeFunc, next) {\r\n        curl(['modules/youtubePanel/youtubePanel'])\r\n        .then(function (YoutubePanel) {\r\n            if (!youtubePanelHelper) {\r\n                youtubePanelHelper = new YoutubePanel();\r\n            }\r\n            if (youtubeFunc) youtubeFunc(youtubePanelHelper);\r\n        })\r\n        .then(function () {\r\n            if (next) next();\r\n        });\r\n        return youtubePanelHelper;\r\n    }\r\n\r\n    document.getQuickZoom = function (quickZoomFunc, next) {\r\n        curl(['modules/quickZoom/quickZoom'], function (QuickZoom) {\r\n            if (!quickZoomHelper) {\r\n                quickZoomHelper = new QuickZoom({\r\n                    el: $('div#quickZoomHolder')\r\n                });\r\n            }\r\n            quickZoomHelper.initQuickZoom();\r\n            if (quickZoomFunc) quickZoomFunc(quickZoomHelper);\r\n        })\r\n        .then(function () {\r\n            if (next) next();\r\n        });\r\n        return quickZoomHelper;\r\n    }\r\n\r\n    document.getPosts = function (lastPostion, callback, endofDataCallback) {\r\n        var bSize = 8;\r\n        document.getMasonry(function (m) {\r\n            bSize = m.batchSize;\r\n            $.ajax({\r\n                url: apiBasePath + \"/postList/50b198cfaee84a500f000001/\" + lastPostion + \"?batchSize=\" + bSize,\r\n                type: 'GET',\r\n                crossDomain: true,\r\n                error: function (xhr, status, err) {\r\n                    document.notify('get post', 'my apology, the site supports chrome/firefox/safari only - ' + err, 3000);\r\n                    //delay by a second and retry\r\n                    masonryHelper.brickCount = lastPostion;\r\n                    var delay = (lastPostion == 0) ? 2000 : 200;\r\n                    setTimeout(document.getPostWithJsonp, delay);\r\n                },\r\n                success: function (data) {\r\n                    if (data.length === 0) {\r\n                        if (isRunningReload == 0) { //workaround \r\n                            $(document).trigger(reloadMasonryEvent);\r\n                            isRunningReload = setTimeout(function () { clearTimeout(isRunningReload); isRunningReload = 0 }, 2000);\r\n                        }\r\n                        document.notify('end of page', 'no more posts available');\r\n                        if (endofDataCallback) endofDataCallback();\r\n                    } else {\r\n                        document.loadBricks(data, callback);\r\n                        masonryHelper.brickCount = lastPostion + masonryHelper.batchSize;\r\n                    }\r\n                },\r\n                dataType: \"json\",\r\n                cache: false\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    document.loadBricks = function (data, callback) {\r\n        isLoading = true;\r\n        document.getMasonry(function () {\r\n            var bricks = [];\r\n            $.each(data, function (key, value) {\r\n                var c = masonryHelper.render(fileBasePath + value.ImageFileId, value.Message, value.Title, value._id, null, null, rolloverSound);\r\n                bricks.push(c[0]);\r\n            });\r\n            masonryHelper.load(bricks, function (elementHolder) {\r\n                document.getYoutubePanel(function (youtubePanel) {\r\n                    youtubePanel.render(elementHolder);\r\n                }, callback);\r\n            });\r\n        });\r\n    }\r\n\r\n    document.showPopup = function (imgUrl, title, details, thumbPic, postId) {\r\n        var style = (isMobile) ? 'S3' : 'S1';\r\n        var orientation = (thumbPic.width() > thumbPic.height()) ? 2 : 1;\r\n        popupPostId = postId;\r\n        popupPanelHelper.hiddenCallback = function () {\r\n            $container.css('-webkit-filter', 'blur(0px)');\r\n            $container.css('-moz-filter', 'blur(0px)');\r\n            $container.css('-ms-filter', 'blur(0px)');\r\n        }\r\n        popupPanelHelper.imgOrientation = orientation;\r\n        popupPanelHelper.render(imgUrl, title, details, postId, style, function () {\r\n\r\n        });\r\n\r\n        popupTitle = $('div#ppBody div.content h2 input[name=\"title\"]');\r\n        popupDetails = $('div#ppBody div.content div.details textarea[name=\"details\"]');\r\n        popupDetails.textareaExpander({ expandEventName: popupDetailsExpandEvent, animate: false });\r\n        popupPanelHelper.bind(popupDetails.selector, 'focusout', function (target) {\r\n            document.toSavePost();\r\n            popupPanelHelper.centerPopup();\r\n            popupPanelHelper.applyCss(popupPanelHelper.currentStyle);\r\n            SyntaxHighlighter.highlight();\r\n            youtubePanelHelper.render();\r\n            popupPanelHelper.show();\r\n        });\r\n        popupPanelHelper.bind(popupTitle.selector, 'focusout', function (target) {\r\n            document.toSavePost();\r\n            youtubePanelHelper.render();\r\n        });\r\n        youtubePanelHelper.render();\r\n        //$container.css('-webkit-filter','blur(4px)');\r\n        //$container.css('-moz-filter','blur(4px)');\r\n        //$container.css('-ms-filter','blur(4px)');\r\n    };\r\n\r\n    document.notify = function (title, message, interval) {\r\n        growlHelper.render(title, message, interval);\r\n        //rolloverSound.play();\r\n    };\r\n\r\n    document.savePost = function (postId, title, details, imageFileId, tags, sessionId, callback) {\r\n        var data = {\r\n            title: title,\r\n            message: details,\r\n            imageFileId: imageFileId,\r\n            tagList: tags,\r\n            sessionId: sessionId\r\n        };\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: apiBasePath + '/postUpdate/' + postId,\r\n            crossDomain: true,\r\n            data: data,\r\n            dataType: 'json',\r\n            success: function (responseData, textStatus, jqXhr) {\r\n                callback(null, responseData.message);\r\n            },\r\n            error: function (responseData, textStatus, errorThrown) {\r\n                callback(errorThrown);\r\n            }\r\n        });\r\n        masonryHelper.update(postId, title, details);\r\n    }\r\n\r\n    document.toSavePost = function () {\r\n        var tags = popupPanelHelper.getTagsFromDetails();\r\n        document.savePost(popupPostId, popupTitle.val(), popupDetails.val(), null, tags, null, function (err, status) {\r\n            if (err) {\r\n                document.notify('problem occured', err);\r\n            }\r\n            else {\r\n                document.getMasonry(function (m) { m.reload(); })\r\n                document.notify('post saved', ' ', 3000);\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    document.getPostWithJsonp = function () {\r\n        var postList = document.createElement('script'),\r\n            bCount = 0,\r\n            bSize = 0;\r\n        document.getMasonry(function (m) {\r\n            bCount = m.brickCount;\r\n            bSize = m.batchSize;\r\n        })\r\n        postList.type = 'text/javascript';\r\n        postList.src = apiBasePath + '/postList/50b198cfaee84a500f000001/' + bCount + '?batchSize=' + bSize + '&callback=reloadPosts';\r\n        document.head.appendChild(postList);\r\n        document.head.removeChild(postList);\r\n    };\r\n\r\n    reloadPosts = function (data) {\r\n        isLoading = true;\r\n        document.getMasonry(function (masonry) {\r\n            document.loadBricks(data, function () {\r\n                document.getQuickZoom();\r\n                $(document).trigger(reloadMasonryEvent);\r\n            });\r\n        });\r\n    };\r\n};\r\n$(document).ready(function () {\r\n    curl(['modules/mobileViewPort']).then(function (viewPort) {\r\n        viewPort.isMobile = isMobile;\r\n        viewPort.set();\r\n    });\r\n    //rolloverSound = new buzz.sound(\"/media/rollover\",{formats:[\"ogg\",\"mp3\"],preload:true});\r\n    //rolloverSound.setVolume(50);//50%\r\n    //rolloverSound.setSpeed(3);  //300% faster\r\n    document.getMasonry(function (m) {\r\n        isRunningGetNext = 1;\r\n        document.getPosts(0, function () {\r\n            document.getQuickZoom();\r\n            isRunningGetNext = 0;\r\n            setTimeout(function () {\r\n                $(document).trigger(reloadMasonryEvent);\r\n            }, 500);\r\n        }, function () {\r\n            isRunningGetNext = 0;\r\n        });\r\n    });\r\n\r\n    //TODO: replace with Session\r\n    //$.support.cors = true;\r\n\r\n\r\n});\r\n"]],"start1":0,"start2":0,"length1":0,"length2":11334}]],"length":11334}
{"contributors":[],"silentsave":false,"ts":1365984296698,"patch":[[{"diffs":[[0,", style,"],[1,"userId,"],[0," functio"]],"start1":7086,"start2":7086,"length1":16,"length2":23}]],"length":11341,"saved":false}
{"ts":1365984298754,"patch":[[{"diffs":[[0,", style,"],[1," "],[0,"userId, "]],"start1":7086,"start2":7086,"length1":16,"length2":17}]],"length":11342,"saved":false}
