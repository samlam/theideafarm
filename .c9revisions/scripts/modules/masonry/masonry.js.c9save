{"ts":1360046227276,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"define([\r\n    'text!modules/masonry/masonryBox.html',\r\n    'css!modules/masonry/masonry.css',\r\n    'js!jquery.masonry.js',\r\n    'js!wiky.js',\r\n    'css!wiky.css'],\r\n    function (rawTemplate, css) {\r\n        var Masonry = Backbone.View.extend({\r\n            el: $('#column'),\r\n            template: rawTemplate,\r\n            css: css,\r\n            brickCount: 0,\r\n            batchSize: 8,\r\n            initialize: function () {\r\n                /*var $el = $(this.el);\r\n                $el.imagesLoaded(function () {\r\n                $el.masonry({\r\n                itemSelector: '.box',\r\n                columnWidth: 0,\r\n                isAnimated: true,\r\n                animationOptions: {\r\n                duration: 400\r\n                }\r\n                });\r\n                });*/\r\n            },\r\n            render: function (urlMainImage, details, title, postId, actions, comments, soundfunc) {\r\n                var self = this;\r\n                var $t = $(self.template);\r\n                var img = $t.find('.pic a img');\r\n                var dTitle = $t.find('div.details h2');\r\n                var d = $t.find('div.details p');\r\n                var a = $t.find('div.actions p');\r\n\r\n                img.attr('src', urlMainImage + '?size=240x9999');     //display the image in the brick\r\n                img.attr('data-src', urlMainImage);\r\n                /*img.one('load', function () {\r\n                if(soundfunc) soundfunc.play();\r\n                });*/\r\n                if (title) dTitle.append(document.htmlEncode(title));\r\n                if (details) {\r\n                    d.append(wiky.process(document.htmlEncode(details), { excerptMode: true }));\r\n                }\r\n                d.attr('title', title);\r\n                d.attr('data-details', document.htmlEncode(details));\r\n                //a.text(actions);\r\n                $t.attr('postId', postId);\r\n                $t.find('.pic').bind('click', function () {\r\n                    var p = $('div[postId=\"' + postId + '\"]');\r\n                    var thumbPic = p.find('img.picture'),\r\n                        embedDetails = p.find('div.details p');\r\n                    document.showPopup(\r\n                        urlMainImage,\r\n                        embedDetails.attr('title'),\r\n                        document.htmlDecode(embedDetails.attr('data-details')),\r\n                        thumbPic,\r\n                        postId);\r\n                });\r\n                return $t;\r\n            },\r\n            load: function (renderedBricks, preLoadFunc, callback) {\r\n                if (!renderedBricks || renderedBricks.length === 0) return;\r\n\r\n                var self = this;\r\n                var $el = $(self.el);\r\n\r\n                $el.append(renderedBricks);\r\n                if (preLoadFunc) preLoadFunc(renderedBricks);\r\n                var $bricks = $(renderedBricks)\r\n\r\n                if (self.brickCount <= self.batchSize) {\r\n                    $bricks.css({ opacity: 0 });\r\n                    //if this is the inital load, let's initialize the container\r\n                    $el.imagesLoaded(function () {\r\n                        $el.masonry({\r\n                            itemSelector: '.box',\r\n                            columnWidth: 0,\r\n                            isAnimated: true,\r\n                            animationOptions: {\r\n                                duration: 400\r\n                            }\r\n                        });\r\n                        $bricks.animate({ opacity: 1 });\r\n                        if (callback) callback();\r\n                    });\r\n                } else {\r\n                    //var $bricks = $(renderedBricks).css({ opacity: 0 });\r\n                    $el.imagesLoaded(function (imgs) {\r\n                        $el.masonry('appended', $bricks, true).masonry('reload');\r\n                        //$bricks.animate({ opacity: 1 });\r\n                        if (callback) callback();\r\n                    });\r\n                }\r\n            },\r\n            reload: function () {\r\n                var $el = $(this.el);\r\n                $el.masonry('reload');\r\n            },\r\n            applyStyle: function (content, cssRule) {\r\n                content.find(cssRule.selectorText).append(cssRule);\r\n            },\r\n            update: function (postId, title, details) {\r\n                var $brick = $('div[postId=' + postId + ']');\r\n                var $details = $brick.find('div.details p'),\r\n                    $title = $brick.find('div.details h2');\r\n                var encodedDetails = document.htmlEncode(details);\r\n                if (title) $title.html(document.htmlEncode(title));\r\n                $details.attr('data-details', encodedDetails);\r\n                $details.attr('title', title);\r\n                $details.html(wiky.process(encodedDetails, { excerptMode: true }));\r\n            }\r\n        });\r\n        return Masonry;\r\n    }\r\n);\r\n"]],"start1":0,"start2":0,"length1":0,"length2":4901}]],"length":4901}
{"contributors":[],"silentsave":false,"ts":1360046218862,"patch":[[{"diffs":[[0,"',\r\n"],[-1,"    'js!jquery.masonry.js',\r\n"],[0,"    "]],"start1":91,"start2":91,"length1":37,"length2":8}]],"length":4872,"saved":false}
